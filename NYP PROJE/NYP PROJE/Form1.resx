<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>